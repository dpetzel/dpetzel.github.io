<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dave&#39;s Site</title>
    <link>http://www.dpetzel.info/categories/general/index.xml</link>
    <description>Recent content on Dave&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>dave@petzel.email (David Petzel)</managingEditor>
    <webMaster>dave@petzel.email (David Petzel)</webMaster>
    <copyright>Â© 2016 David Petzel</copyright>
    <atom:link href="http://www.dpetzel.info/categories/general/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Switched To Tinkerer</title>
      <link>http://www.dpetzel.info/post/switched_to_tinkerer/</link>
      <pubDate>Mon, 23 Sep 2013 00:00:00 +0000</pubDate>
      <author>dave@petzel.email (David Petzel)</author>
      <guid>http://www.dpetzel.info/post/switched_to_tinkerer/</guid>
      <description>&lt;p&gt;For anyone that might have been following along I&amp;rsquo;ve been trying out different
solutions for static site generation of this site. I&amp;rsquo;d been running &lt;code&gt;Pelican&lt;/code&gt;
for a bit, but I was getting annoyed a bit with the limited directives. I&amp;rsquo;ve
gotten used to &lt;code&gt;Sphinx&lt;/code&gt; at work for some project documentation and I wanted
to see if I could leverage some of that. A little googling later and I found
&lt;code&gt;Tinkerer&lt;/code&gt; which is based on Sphinx but adds some workflow around the process
to make blogging with &lt;code&gt;Sphinx&lt;/code&gt; easier.&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;ve made the switch and what you are reading now was generated with Tinkerer.
I didn&amp;rsquo;t have very much content yet so I just manually moved everything over,
although from what I saw if you had a lot of content it would be pretty easy
to whip up a script to do the transfer. The big difference for me was that
Pelican had you organize your posts by category, while Tinkerer has you organize
them by date. Aside form that they seemed to have roughly the same features
with Tinkerer having full Sphinx support.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll see if I continue to like it as time goes on. Thats all for now.&lt;/p&gt;

&lt;p&gt;References:
* &lt;a href=&#34;http://docs.getpelican.com/en/3.2/&#34;&gt;Pelican&lt;/a&gt;
* &lt;a href=&#34;http://sphinx-doc.org/&#34;&gt;Sphinx&lt;/a&gt;
* &lt;a href=&#34;http://tinkerer.me/&#34;&gt;Tinkerer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello Pelican</title>
      <link>http://www.dpetzel.info/post/hello_pelican/</link>
      <pubDate>Sun, 08 Sep 2013 00:00:00 +0000</pubDate>
      <author>dave@petzel.email (David Petzel)</author>
      <guid>http://www.dpetzel.info/post/hello_pelican/</guid>
      <description>&lt;p&gt;So I&amp;rsquo;ve gone live with a static site using &lt;a href=&#34;http://docs.getpelican.com&#34;&gt;Pelican&lt;/a&gt;.
Originally I had kicked off my attempts at a static site using Mynt, which I
detailed &lt;a href=&#34;http://www.dpetzel.info/post/live_with_mynt/&#34;&gt;here&lt;/a&gt;. There really wasn&amp;rsquo;t anything
wrong with Mynt, it just didn&amp;rsquo;t feel right to me after having trying to use it.
&lt;/p&gt;

&lt;p&gt;One of the reasons I decided to make the switch was Pelicans themes. I don&amp;rsquo;t
have a single artistic or stylish cell in my body, so I heavily rely on themes
by people who are good at making things look good. I really couldn&amp;rsquo;t find
many themes at all for Mynt, while Pelican has a pretty nice collection in their
&lt;a href=&#34;https://github.com/getpelican/pelican-themes&#34;&gt;Pelican Themes Repo&lt;/a&gt;, which is
where I found this one (attributed in the footer).&lt;/p&gt;

&lt;p&gt;The other thing was the directory layout just seems more &amp;laquo;me&amp;raquo;. I know that sounds
dumb, but I&amp;rsquo;m a believer in picking tools that fit your style, assuming the
technical merits are all the same. This was most certainly a case of that.&lt;/p&gt;

&lt;p&gt;Not much else to report, just wanted to get the traditional &amp;laquo;hello world&amp;raquo; post
out there&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Live With Mynt</title>
      <link>http://www.dpetzel.info/post/live_with_mynt/</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>
      <author>dave@petzel.email (David Petzel)</author>
      <guid>http://www.dpetzel.info/post/live_with_mynt/</guid>
      <description>&lt;p&gt;So I&amp;rsquo;ve been hearing a bit lately about static site generators. So the last
couple of nights I decided to finally do a little homework and better
understand it.

So after reading about the various options out there I ended up experimenting
with several of the available Python options (Mynt, Pelican, Nikola, and Hyde).
I went with Python, as I am primarily a Windows users and I&amp;rsquo;ve always had an
easier time getting Python packages working on Windows than Ruby
(which is why I kept looking despite Jekyll being so popular).&lt;/p&gt;

&lt;p&gt;I was not overwhelmed by any of the offerings, and it was clear that these are
not solutions for the &amp;laquo;average&amp;raquo; user. You need to small amount of technical
skill to get any of them up and running and understand their template systems.&lt;/p&gt;

&lt;p&gt;At the end of the day I decided to go with Mynt as it seemed to be most basic.
Some of the others had more plugins and such, but for how rarely I do this,
I don&amp;rsquo;t need much.&lt;/p&gt;

&lt;p&gt;One of the other things I wanted to learn more about was using GitHub Pages
for user pages. At work I&amp;rsquo;ve played a fair amount with GH-Pages for project
sites,  but since I&amp;rsquo;d never done a user page, I decided I&amp;rsquo;d host my personal
site created with Mynt on my Github Personal Page. I&amp;rsquo;m not sure why, but I
don&amp;rsquo;t really care for the way its implemented requiring you to understand git
branches and what not, but I&amp;rsquo;ve grown used to it and have learned to tolerate
it :).&lt;/p&gt;

&lt;p&gt;One of the really cool things I found completely by accident during my
digging was &lt;a href=&#34;https://github.com/davisp/ghp-import/&#34;&gt;https://github.com/davisp/ghp-import/&lt;/a&gt;. ghp-import makes it super
 easy to publish a directory of compiled content to a given Github branch.
 Once I figured this out the whole multiple branch thing becomes less annoying.
 So I configured my repo&amp;rsquo;s default branch to be &lt;strong&gt;source&lt;/strong&gt;, leaving &lt;strong&gt;master&lt;/strong&gt;
 as the place the compiled content would end up. Then I&amp;rsquo;m able to easily push
 with a simple one-liner:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; ghp-import _build -p -r origin -b master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK&amp;hellip;. thats enough for now, back to the interwebs to see what else I can
 learn.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>