<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Email on Dave&#39;s Site</title>
    <link>http://www.dpetzel.info/tags/email/</link>
    <description>Recent content in Email on Dave&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>dave@petzel.email (David Petzel)</managingEditor>
    <webMaster>dave@petzel.email (David Petzel)</webMaster>
    <copyright>Â© 2016 David Petzel</copyright>
    <lastBuildDate>Mon, 05 Mar 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.dpetzel.info/tags/email/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Sending an SMTP email in Python 3</title>
      <link>http://www.dpetzel.info/post/programming/sending_an_smtp_email_in_python_3/</link>
      <pubDate>Mon, 05 Mar 2012 00:00:00 +0000</pubDate>
      <author>dave@petzel.email (David Petzel)</author>
      <guid>http://www.dpetzel.info/post/programming/sending_an_smtp_email_in_python_3/</guid>
      <description>&lt;p&gt;This took me far longer than it should have, and while I&amp;rsquo;d like to blame
shotty documentation and sparse examples it was probably my own stupidity
causing the issue. Whatever the case maybe I wanted to jot down my results
as I&amp;rsquo;m sure I&amp;rsquo;ll need to do this again.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like go on a rant about how much harder this was than it should be and how
an easier module should exist. However, the fact that I can&amp;rsquo;t write an easier
module lends itself to the &amp;laquo;Don&amp;rsquo;t Complain, Contribute&amp;raquo; motto, so I&amp;rsquo;ll settle
on the belief that its not easier for a good reason, and maybe one day if I
ever get really good at Python I can make it easier.&lt;/p&gt;

&lt;p&gt;For the time challenged people who don&amp;rsquo;t want to read, here is the condensed
version with no explanation:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import smtplib
import string

subject = &amp;quot;My Wicked Cool Subject Line&amp;quot;
to = &amp;quot;rec1@domain1.com,rec2@domain.com&amp;quot;.split(&amp;quot;,&amp;quot;)
from = &amp;quot;sender@domain.com&amp;quot;
body_text = &amp;quot;Enter the contents of your body here&amp;quot;
body = &amp;quot;From: {0} \r\n \
        To: {1} \r\n \
        Subject: {2} \r\n \
        {3} \r\n&amp;quot;.format(FROM, &amp;quot;, &amp;quot;.join(TO), SUBJECT, text)
server = smtplib.SMTP(&amp;quot;YourSMTPServerName&amp;quot;,YourSMTPServerPort)
server.login(&amp;quot;you@yourdomain.com&amp;quot;,&amp;quot;yourpassword&amp;quot;)
server.set_debuglevel(1)
server.sendmail(from, to, body)
server.quit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For those that want a little more explanation, aside from reading the python
docs, I&amp;rsquo;ve added some quick notes around some of the stuff that is not uber
obvious. So the first thing we need is the SMTP module:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import smtplib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we&amp;rsquo;ll need the string module. Quite likely there are other ways to
accomplish this, but this is the method I took:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The following is using some variables to over-simplify the whole mess,
but you should get the idea:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;subject = &amp;quot;My Wicked Cool Subject Line&amp;quot;
#add as many as you need separated by commas
to = &amp;quot;rec1@domain1.com,rec2@domain.com&amp;quot;.split(&amp;quot;,&amp;quot;)
from = &amp;quot;sender@domain.com&amp;quot;
#obviously you can dynamically generate this variable.
body_text = &amp;quot;Enter the contents of your body here&amp;quot;
#didn&#39;t bother to read all the gory details, but from what I gather
# This approach is used to set some SMTP headers, and munch everything
# into a single body entity.
body = &amp;quot;From: {0} \r\n \
        To: {1} \r\n \
        Subject: {2} \r\n \
        {3} \r\n&amp;quot;.format(FROM, &amp;quot;, &amp;quot;.join(TO), SUBJECT, text)
#This part is pretty cool. It uses the new format method in lieu of the
# older %s approach. Honestly I find it simpler than the %s approach.

server = smtplib.SMTP(&amp;quot;YourSMTPServerName&amp;quot;,YourSMTPServerPort)
#You only need if your not connecting to the defacto standard 25.

#This line is needed because my SMTP server requires Auth. If yours doesnt
# Omit this.
server.login(&amp;quot;you@yourdomain.com&amp;quot;,&amp;quot;yourpassword&amp;quot;)

#I&#39;m curious and wanted to see what was happening. So I flipped on debugging.
server.set_debuglevel(1)
# Fire Away!
server.sendmail(from, to, body)
#End you session.
server.quit()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>