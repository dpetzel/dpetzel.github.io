<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Minitest on Dave&#39;s Site</title>
    <link>http://www.dpetzel.info/tags/minitest/</link>
    <description>Recent content in Minitest on Dave&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>dave@petzel.email (David Petzel)</managingEditor>
    <webMaster>dave@petzel.email (David Petzel)</webMaster>
    <copyright>Â© 2016 David Petzel</copyright>
    <lastBuildDate>Sun, 22 Sep 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.dpetzel.info/tags/minitest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Chef Minitest and Slow Starting Web Application</title>
      <link>http://www.dpetzel.info/post/chef/chef_minitest_and_slow_starting_web_application/</link>
      <pubDate>Sun, 22 Sep 2013 00:00:00 +0000</pubDate>
      <author>dave@petzel.email (David Petzel)</author>
      <guid>http://www.dpetzel.info/post/chef/chef_minitest_and_slow_starting_web_application/</guid>
      <description>&lt;p&gt;As I have started to become proficient with &lt;code&gt;Chef&lt;/code&gt; I&amp;rsquo;ve also gotten used to
using the &lt;code&gt;minitest-chef-handler&lt;/code&gt; for writing integration tests for my
cookbooks. This quick post is to capture an approach I&amp;rsquo;ve grown to like for
doing HTTP tests of slow starting web applications. I&amp;rsquo;ve noticed that many
services will return from an &lt;code&gt;/sbin/service mysapp start&lt;/code&gt; well before
the application has fully started and is accepting HTTP connections.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>